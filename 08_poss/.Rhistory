}
for(i in unique(abs(sort(wpm$wpm)))
{
# how to save this to a vector to be displayed later?
j <- sum(abs(wpm$wpm)==i) + length(tie_scores[tie_scores==i])
print(paste("wpm ==",i,":",j))
#k <- k + j
}
for(i in unique(abs(sort(wpm$wpm)))
{
# how to save this to a vector to be displayed later?
j <- sum(abs(wpm$wpm)==i) + length(tie_scores[tie_scores==i])
print(paste("wpm ==",i,":",j))
#k <- k + j
}
for (i in sort(unique(abs(wpm$wpm))))
{
# how to save this to a vector to be displayed later?
j <- sum(abs(wpm$wpm)==i) + length(tie_scores[tie_scores==i])
print(paste("wpm ==",i,":",j))
#k <- k + j
}
for (i in sort(unique(abs(wpm$wpm))))
{
# how to save this to a vector to be displayed later?
#j <- sum(abs(wpm$wpm)==i) + length(tie_scores[tie_scores==i])
j <- sum(i) + length(tie_scores[tie_scores==i])
print(paste("wpm ==",i,":",j))
#k <- k + j
}
for (i in sort(unique(abs(wpm$wpm))))
{
# how to save this to a vector to be displayed later?
j <- sum(abs(wpm$wpm)==i) + length(tie_scores[tie_scores==i])
print(paste("wpm ==",i,":",j))
}
for (i in sort(unique(abs(wpm$wpm))))
{
# how to save this to a vector to be displayed later?
j <- sum(abs(wpm$wpm)==i) + length(tie_scores[tie_scores==i])
print(paste(i,":",j))
}
for (i in 1:7)
{
j <- round(sum(wpm$wpm==i)/(sum(abs(wpm$wpm)==i) +
length(tie_scores[tie_scores==i])),2)
print(paste("wpm ==",i,":",j))
}
for (i in sort(unique(abs(wpm$wpm))))
{
# how to save this to a vector to be displayed later?
j <- sum(abs(wpm$wpm)==i) + length(tie_scores[tie_scores==i])
k <- round(sum(wpm$wpm==i)/(sum(abs(wpm$wpm)==i) +
+ length(tie_scores[tie_scores==i])),2)
print(paste(i,j,k))
}
for (i in sort(unique(abs(wpm$wpm)))>0)
{
# how to save this to a vector to be displayed later?
j <- sum(abs(wpm$wpm)==i) + length(tie_scores[tie_scores==i])
k <- round(sum(wpm$wpm==i)/(sum(abs(wpm$wpm)==i) +
+ length(tie_scores[tie_scores==i])),2)
print(paste(i,j,k))
}
for (i in sort(unique(abs(wpm$wpm>0))))
{
# how to save this to a vector to be displayed later?
j <- sum(abs(wpm$wpm)==i) + length(tie_scores[tie_scores==i])
k <- round(sum(wpm$wpm==i)/(sum(abs(wpm$wpm)==i) +
+ length(tie_scores[tie_scores==i])),2)
print(paste(i,j,k))
}
for (i in sort(unique(abs(wpm$wpm))))
{
# how to save this to a vector to be displayed later?
j <- sum(abs(wpm$wpm)==i) + length(tie_scores[tie_scores==i])
k <- round(sum(wpm$wpm==i)/(sum(abs(wpm$wpm)==i) +
+ length(tie_scores[tie_scores==i])),2)
print(paste(i,j,k))
}
poss.per.team <- sapply(split(ws7s_poss,ws7s_poss$TEAM),
function(x) nrow(x))
poss.per.team
poss.per.opp <- sapply(split(ws7s_poss,ws7s_poss$OPP),
function(x) nrow(x))
poss.per.opp
match.per.team <- sapply(split(ws7s_poss,ws7s_poss$TEAM),
function(x) length(unique(x$SERIES.MATCH)))
match.per.team
team.poss <- as.data.frame(cbind(poss.per.team,
poss.per.opp, match.per.team))
team.poss
team.poss <- cbind(team = factor(names(poss.per.team)),
team.poss)
team.poss
team.poss <- as.data.frame(cbind(poss.per.team,
poss.per.opp, match.per.team))
team.poss
team.poss.diff <- team.poss %>%
mutate(diff = round((poss.per.team-poss.per.opp)/match.per.team,2)) %>%
select(team, diff) %>%
arrange(-diff)
team.poss <- cbind(team = factor(names(poss.per.team)),
team.poss)
team.poss.diff <- team.poss %>%
mutate(diff = round((poss.per.team-poss.per.opp)/match.per.team,2)) %>%
select(team, diff) %>%
arrange(-diff)
team.poss.diff
# order factor levels for plotting
team.poss.diff$team <- factor(team.poss.diff$team,
levels=team.poss.diff$team[order(team.poss.diff$diff)])
tpd <- ggplot(team.poss.diff) +
geom_point(aes(x=team, y=diff), fill="gray", stat="identity") +
coord_flip() +
theme(panel.grid.major.x = element_blank(),
panel.grid.major.y = element_line(linetype=3, color="darkgray"),
axis.text.y=element_text(size=rel(0.8))) +
ylab("") + xlab("")
tpd
team.poss
wpm <- all_scores %>%
filter(! points.1 == points.2) %>%
mutate(wpm = ifelse(points.1 > points.2,
count.1-count.2,
count.2-count.1),
pos = wpm >=0) %>%
select(match, wpm, pos) %>%
arrange(wpm)
wpm
# calculate possession differential by team
team.poss.diff <- team.poss %>%
mutate(diff = round((poss.per.team-poss.per.opp)/match.per.team,0)) %>%
select(team, diff) %>%
arrange(-diff)
tpd <- ggplot(team.poss.diff) +
geom_point(aes(x=team, y=diff), fill="gray", stat="identity") +
coord_flip() +
theme(panel.grid.major.x = element_blank(),
panel.grid.major.y = element_line(linetype=3, color="darkgray"),
axis.text.y=element_text(size=rel(0.8))) +
ylab("") + xlab("")
tpd
team.poss.diff$team <- factor(team.poss.diff$team,
levels=team.poss.diff$team[order(team.poss.diff$diff)])
tpd <- ggplot(team.poss.diff) +
geom_point(aes(x=team, y=diff), fill="gray", stat="identity") +
coord_flip() +
theme(panel.grid.major.x = element_blank(),
panel.grid.major.y = element_line(linetype=3, color="darkgray"),
axis.text.y=element_text(size=rel(0.8))) +
ylab("") + xlab("")
tpd
tpd <- ggplot(team.poss.diff) +
geom_point(aes(x=team, y=diff), fill="gray", stat="identity") +
coord_flip() +
theme(panel.grid.major.x = element_blank(),
panel.grid.major.y = element_line(linetype=3, color="darkgray"),
axis.text.y=element_text(size=rel(0.8))) +
ylab("") + xlab("")
tpd
team.poss.diff <- team.poss %>%
mutate(diff = round((poss.per.team-poss.per.opp)/match.per.team,1)) %>%
select(team, diff) %>%
arrange(-diff)
# order factor levels for plotting
team.poss.diff$team <- factor(team.poss.diff$team,
levels=team.poss.diff$team[order(team.poss.diff$diff)])
tpd <- ggplot(team.poss.diff) +
geom_point(aes(x=team, y=diff), fill="gray", stat="identity") +
coord_flip() +
theme(panel.grid.major.x = element_blank(),
panel.grid.major.y = element_line(linetype=3, color="darkgray"),
axis.text.y=element_text(size=rel(0.8))) +
ylab("") + xlab("")
tpd
team.poss.diff
team.poss.diff <- team.poss %>%
mutate(diff = round(poss.per.team-poss.per.opp,1)) %>%
select(team, diff) %>%
arrange(-diff)
team.poss.diff
# calculate average possession differential by team
avg.team.poss.diff <- team.poss %>%
mutate(diff = round((poss.per.team-poss.per.opp)/match.per.team,1)) %>%
select(team, diff) %>%
arrange(-diff)
# calculate possession differential by team
team.poss.diff <- team.poss %>%
mutate(diff = round(poss.per.team-poss.per.opp,1)) %>%
select(team, diff) %>%
arrange(-diff)
# order factor levels for plotting
avg.team.poss.diff$team <- factor(avg.team.poss.diff$team,
levels=avg.team.poss.diff$team[order(avg.team.poss.diff$diff)])
tpd <- ggplot(avg.team.poss.diff) +
geom_point(aes(x=team, y=diff), fill="gray", stat="identity") +
coord_flip() +
theme(panel.grid.major.x = element_blank(),
panel.grid.major.y = element_line(linetype=3, color="darkgray"),
axis.text.y=element_text(size=rel(0.8))) +
ylab("") + xlab("")
tpd
# calculate total possession differential by team
team.poss.diff <- team.poss %>%
mutate(diff = round(poss.per.team-poss.per.opp,1)) %>%
select(team, diff) %>%
arrange(-diff)
team.poss.diff
team.poss.diff <- team.poss %>%
mutate(diff = round(poss.per.team-poss.per.opp,1)) %>%
select(team, diff) %>%
arrange(-diff)
tpd <- ggplot(avg.team.poss.diff) +
geom_point(aes(x=team, y=diff), fill="gray", stat="identity") +
coord_flip() +
theme(panel.grid.major.x = element_blank(),
panel.grid.major.y = element_line(linetype=3, color="darkgray"),
axis.text.y=element_text(size=rel(0.8))) +
ylab("") + xlab("")
tpd
# calculate total possession differential by team
team.poss.diff <- team.poss %>%
mutate(diff = round(poss.per.team-poss.per.opp,1)) %>%
select(team, diff) %>%
arrange(-diff)
tpd <- ggplot(team.poss.diff) +
geom_point(aes(x=team, y=diff), fill="gray", stat="identity") +
coord_flip() +
theme(panel.grid.major.x = element_blank(),
panel.grid.major.y = element_line(linetype=3, color="darkgray"),
axis.text.y=element_text(size=rel(0.8))) +
ylab("") + xlab("")
tpd
# calculate total possession differential by team
team.poss.diff <- team.poss %>%
mutate(diff = round(poss.per.team-poss.per.opp,1)) %>%
select(team, diff) %>%
arrange(-diff)
# order factor levels for plotting
team.poss.diff$team <- factor(team.poss.diff$team,
levels=team.poss.diff$team[order(team.poss.diff$diff)])
tpd <- ggplot(team.poss.diff) +
geom_point(aes(x=team, y=diff), fill="gray", stat="identity") +
coord_flip() +
theme(panel.grid.major.x = element_blank(),
panel.grid.major.y = element_line(linetype=3, color="darkgray"),
axis.text.y=element_text(size=rel(0.8))) +
ylab("") + xlab("")
tpd
# calculate average possession differential by team
avg.team.poss.diff <- team.poss %>%
mutate(diff = round((poss.per.team-poss.per.opp)/match.per.team,1)) %>%
select(team, diff) %>%
arrange(-diff)
# order factor levels for plotting
avg.team.poss.diff$team <- factor(avg.team.poss.diff$team,
levels=avg.team.poss.diff$team[order(avg.team.poss.diff$diff)])
atpd <- ggplot(avg.team.poss.diff) +
geom_point(aes(x=team, y=diff), fill="gray", stat="identity") +
coord_flip() +
theme(panel.grid.major.x = element_blank(),
panel.grid.major.y = element_line(linetype=3, color="darkgray"),
axis.text.y=element_text(size=rel(0.8))) +
ylab("") + xlab("")
atpd
tem.poss
team.poss
team.poss <- as.data.frame(cbind(team = factor(names(poss.per.team)),poss.per.team,
poss.per.opp, match.per.team))
team.poss
team.poss.diff <- team.poss %>%
mutate(diff = round(poss.per.team-poss.per.opp,1)) %>%
select(team, diff) %>%
arrange(-diff)
team.poss.diff
team.poss
team.poss <- as.data.frame(cbind(team = factor(names(poss.per.team)),poss.per.team,
poss.per.opp, match.per.team))
team.poss
team.poss <- as.data.frame(cbind(team = names(poss.per.team),poss.per.team,
poss.per.opp, match.per.team))
team.poss
team.poss.diff <- team.poss %>%
mutate(diff = round(poss.per.team-poss.per.opp,1)) %>%
select(team, diff) %>%
arrange(-diff)
team.poss
team.poss.diff <- team.poss %>%
mutate(diff = round(poss.per.team-poss.per.opp,1)) %>%
select(team, diff) %>%
arrange(-diff)poss.per.team <- sapply(split(ws7s_poss,ws7s_poss$TEAM),
function(x) nrow(x))
poss.per.opp <- sapply(split(ws7s_poss,ws7s_poss$OPP),
function(x) nrow(x))
match.per.team <- sapply(split(ws7s_poss,ws7s_poss$TEAM),
function(x) length(unique(x$SERIES.MATCH)))
team.poss <- as.data.frame(cbind(poss.per.team,
poss.per.opp, match.per.team))
team.poss <- cbind(team = factor(names(poss.per.team)),
team.poss)
team.poss.diff <- team.poss %>%
mutate(diff = round(poss.per.team-poss.per.opp,1)) %>%
select(team, diff) %>%
arrange(-diff)
team.poss.diff
for (i in sort(unique(abs(wpm$wpm))))
{
# how to save this to a vector to be displayed later?
j <- sum(abs(wpm$wpm)==i) + length(tie_scores[tie_scores==i])
k <- round(sum(wpm$wpm==i)/(sum(abs(wpm$wpm)==i) +
+ length(tie_scores[tie_scores==i])),2)
print(paste(i,j,k))
}
sort(unique(abs(wpm$wpm)
)
)
sort(unique(abs(wpm$wpm))) > 1
sort(unique(abs(wpm$wpm && > 1)))
for (i in sort(unique(abs(wpm[wpm>0]))))
{
# how to save this to a vector to be displayed later?
j <- sum(abs(wpm$wpm)==i) + length(tie_scores[tie_scores==i])
k <- round(sum(wpm$wpm==i)/(sum(abs(wpm$wpm)==i) +
+ length(tie_scores[tie_scores==i])),2)
print(paste(i,j,k))
}
for (i in sort(unique(abs(wpm$wpm))))
{
# how to save this to a vector to be displayed later?
j <- sum(abs(wpm$wpm)==i) + length(tie_scores[tie_scores==i])
k <- round(sum(wpm$wpm==i)/(sum(abs(wpm$wpm)==i) +
+ length(tie_scores[tie_scores==i])),2)
print(paste(i,j,k))
}
for (i in sort(unique(abs(wpm$wpm))))
{
# how to save this to a vector to be displayed later?
j <- sum(abs(wpm$wpm)==i) + length(tie_scores[tie_scores==i])
k <- round(sum(wpm$wpm==i)/(sum(abs(wpm$wpm)==i) +
+ length(tie_scores[tie_scores==i])),2)
print(paste(i,j,k))
l <- rbind(i,j,k)
}
l
for (i in sort(unique(abs(wpm$wpm))))
{
# how to save this to a vector to be displayed later?
j <- sum(abs(wpm$wpm)==i) + length(tie_scores[tie_scores==i])
k <- round(sum(wpm$wpm==i)/(sum(abs(wpm$wpm)==i) +
+ length(tie_scores[tie_scores==i])),2)
print(paste(i,j,k))
l <- cbind(i,j,k)
}
l
for (i in sort(unique(abs(wpm$wpm))))
{
# how to save this to a vector to be displayed later?
j <- sum(abs(wpm$wpm)==i) + length(tie_scores[tie_scores==i])
k <- round(sum(wpm$wpm==i)/(sum(abs(wpm$wpm)==i) +
+ length(tie_scores[tie_scores==i])),2)
print(paste(i,j,k))
l <- data.frame(i,j,k)
l_total <- rbind(l,l_total)
}
l_total = data.frame()
for (i in sort(unique(abs(wpm$wpm))))
{
# how to save this to a vector to be displayed later?
j <- sum(abs(wpm$wpm)==i) + length(tie_scores[tie_scores==i])
k <- round(sum(wpm$wpm==i)/(sum(abs(wpm$wpm)==i) +
+ length(tie_scores[tie_scores==i])),2)
print(paste(i,j,k))
l <- data.frame(i,j,k)
l_total <- rbind(l,l_total)
}
l_total
sort(l_total)
source('~/rugby7s/08_poss/clean/ppp.R')
source('~/rugby7s/08_poss/winprob_by_wpm.R')
source('~/rugby7s/08_poss/winprob_by_wpm.R')
DT <- data.table(ws7s_poss,key="SERIES.MATCH,TEAM")
source('~/rugby7s/08_poss/winprob_by_wpm.R')
DT
library("dplyr")
library("ggplot2")
library("grid")
library("gridExtra")
source('~/rugby7s/func/poss_func.R')
source('~/rugby7s/08_poss/winprob_by_wpm.R')
install.packages("DT")
source('~/rugby7s/08_poss/winprob_by_wpm.R')
source('~/rugby7s/08_poss/winprob_by_wpm.R')
source('~/rugby7s/08_poss/winprob_by_wpm.R')
source('~/rugby7s/08_poss/winprob_by_wpm.R')
source('~/rugby7s/08_poss/clean/clean_poss.R')
source('~/rugby7s/08_poss/poss_full.R')
atpd
ws7s_poss
str(ws7s_poss)
unique(ws7s_poss$ROUND)
source('~/rugby7s/08_poss/winprob_by_wpm.R')
poss.per.team <- sapply(split(ws7s_poss,ws7s_poss$TEAM),
function(x) nrow(x))
poss.per.opp <- sapply(split(ws7s_poss,ws7s_poss$OPP),
function(x) nrow(x))
match.per.team <- sapply(split(ws7s_poss,ws7s_poss$TEAM),
function(x) length(unique(x$SERIES.MATCH)))
team.poss <- as.data.frame(cbind(poss.per.team,
poss.per.opp, match.per.team))
team.poss <- cbind(team = factor(names(poss.per.team)),
team.poss)
# calculate total possession differential by team
team.poss.diff <- team.poss %>%
mutate(diff = round(poss.per.team-poss.per.opp,1)) %>%
select(team, diff) %>%
arrange(-diff)
team.poss.diff
# order factor levels for plotting
team.poss.diff$team <- factor(team.poss.diff$team,
levels=team.poss.diff$team[order(team.poss.diff$diff)])
team.poss.diff
tpd <- ggplot(team.poss.diff) +
geom_point(aes(x=team, y=diff), fill="gray", stat="identity") +
coord_flip() +
theme(panel.grid.major.x = element_blank(),
panel.grid.major.y = element_line(linetype=3, color="darkgray"),
axis.text.y=element_text(size=rel(0.8))) +
ylab("") + xlab("")
tpd
team.poss.diff <- team.poss %>%
mutate(diff = round(poss.per.team-poss.per.opp,1)) %>%
select(team, diff) %>%
arrange(-diff)
tpd <- ggplot(team.poss.diff) +
geom_point(aes(x=team, y=diff), fill="gray", stat="identity") +
coord_flip() +
theme(panel.grid.major.x = element_blank(),
panel.grid.major.y = element_line(linetype=3, color="darkgray"),
axis.text.y=element_text(size=rel(0.8))) +
ylab("") + xlab("")
tpd
team.poss.diff
# order factor levels for plotting
team.poss.diff$team <- factor(team.poss.diff$team,
levels=team.poss.diff$team[order(team.poss.diff$diff)])
tpd <- ggplot(team.poss.diff) +
geom_point(aes(x=team, y=diff), fill="gray", stat="identity") +
coord_flip() +
theme(panel.grid.major.x = element_blank(),
panel.grid.major.y = element_line(linetype=3, color="darkgray"),
axis.text.y=element_text(size=rel(0.8))) +
ylab("") + xlab("")
tpd
# calculate average possession differential by team
avg.team.poss.diff <- team.poss %>%
mutate(diff = round((poss.per.team-poss.per.opp)/match.per.team,1)) %>%
select(team, diff) %>%
arrange(-diff)
avg.team.poss.diff
# order factor levels for plotting
avg.team.poss.diff$team <- factor(avg.team.poss.diff$team,
levels=avg.team.poss.diff$team[order(avg.team.poss.diff$diff)])
atpd <- ggplot(avg.team.poss.diff) +
geom_point(aes(x=team, y=diff), fill="gray", stat="identity") +
coord_flip() +
theme(panel.grid.major.x = element_blank(),
panel.grid.major.y = element_line(linetype=3, color="darkgray"),
axis.text.y=element_text(size=rel(0.8))) +
ylab("") + xlab("")
atpd
str(ws7s_poss)
# LOOK AT ATPD IN CUP ROUNDS ONLY, LABEL ON SAME GRAPH
ws7s_poss_cup <- ws7s_poss %>%
filter(ROUND=="Pool" | ROUND == "Cup")
poss.per.team.cup <- sapply(split(ws7s_poss_cup,ws7s_poss_cup$TEAM),
function(x) nrow(x))
poss.per.opp.cup <- sapply(split(ws7s_poss_cup,ws7s_poss_cup$OPP),
function(x) nrow(x))
match.per.team.cup <- sapply(split(ws7s_poss_cup,ws7s_poss_cup$TEAM),
function(x) length(unique(x$SERIES.MATCH)))
team.poss.cup <- as.data.frame(cbind(poss.per.team.cup,
poss.per.opp.cup, match.per.team.cup))
team.poss <- cbind(team = factor(names(poss.per.team.cup)),
team.poss.cup)
source('~/rugby7s/08_poss/poss_full.R')
atpd_cup
team.poss.cup
team.poss["USA"]
team.poss["USA",]
team.poss.cup["USA",]
avg.team.poss.diff.cup
avg.team.poss.diff.cup["USA",]
avg.team.poss.diff.cup[,"USA"]
avg.team.poss.diff.cup["USA",]
avg.team.poss.diff.cup
avg.team.poss.diff.cup$team == USA
avg.team.poss.diff.cup[avg.team.poss.diff.cup$team=="USA"]
avg.team.poss.diff.cup[avg.team.poss.diff.cup$team=="USA",]
avg.team.poss.diff[avg.team.poss.diff$team=="USA",]
avg.team.poss.diff[avg.team.poss.diff$team=="UFIJ",]
avg.team.poss.diff[avg.team.poss.diff$team=="FIJ",]
avg.team.poss.diff.cup[avg.team.poss.diff.cup$team=="FIJ",]
avg.team.poss.diff.cup[avg.team.poss.diff.cup$team=="NZL",]
avg.team.poss.diff[avg.team.poss.diff$team=="NZL",]
avg.team.poss.diff.cup[avg.team.poss.diff.cup$team=="RSA",]
avg.team.poss.diff[avg.team.poss.diff$team=="RSA",]
avg.team.poss.diff[avg.team.poss.diff$team=="CAN",]
avg.team.poss.diff.cup[avg.team.poss.diff.cup$team=="CAN",]
avg.team.poss.diff.cup[avg.team.poss.diff.cup$team=="ARG",]
avg.team.poss.diff[avg.team.poss.diff$team=="ARG",]
source('~/rugby7s/08_poss/poss_full.R')
